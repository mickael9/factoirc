========
FactoIRC
========

FactoIRC is a bidirectional IRC bridge between Factorio and IRC.
It comes as a plugin for the irc3_ python module.

It can join one or more channels and forward messages back and forth between IRC and Factorio.

Some IRC commands are also provided :

- **!rcon**: Execute an RCON command and return the result.
- **!players**: Get the list of the currently online players.

FactoIRC uses the RCON protocol introduced in Factorio 0.13 to forward messages from IRC to Factorio.

As a result, FactoIRC **will not work with Factorio 0.12** and earlier versions.

Forwarding Factorio chat messages to IRC requires access to the Factorio server output which can be done with two methods depending on your setup.

Installation
------------

You'll need to have Python 3.5 (or later) which can be obtained through your distribution's package manager
or downloaded from https://www.python.org/ (for Windows users).

On Windows, make sure to check the *"Add Python 3.x to PATH"* checkbox when installing.

Once Python is installed, FactoIRC can be installed using

.. code:: bash

    $ pip3 install factoirc


Configuration
-------------

Configuration is done using the `config.ini` file. A config.example.ini_ file is provided as an example.

Depending on your setup, you will have to use either the `stdin` or the `systemd` method.

Method 1: `stdin`
~~~~~~~~~~~~~~~~~

This method reads the Factorio output from the standard input stream, it also supports reading from a file via shell redirection.

You will need to connect the Factorio server output to the FactoIRC bot.

This can be achieved using a command such as:

.. code:: bash
   
    $ factorio --rcon-port=27015 --rcon-password=password --start-server=save.zip | irc3 config.ini


Alternatively, you might want to separate execution of Factorio and the bot using an intermediate log file:

.. code:: bash

    $ factorio ... > log.txt
    $ irc3 config.ini < log.txt

**Warning:** do NOT use the `factorio-current.log` file created by Factorio, as it does not contain the chat log.

factorio-init_ users
====================
`factorio-init` stores the server output in a file named `server.out`, which you can use as input:

.. code:: bash

    $ irc3 config.ini < /opt/factorio/server.out

Note that the systemd service for `factorio-init` does not save the output into the journal, so you can't use the `systemd` method with it.

Method 2: `systemd` journal
~~~~~~~~~~~~~~~~~~~~~~~~~~~

This method applies only if your Factorio server runs under systemd (only for Linux machines) and its output is stored in the journal.

In this case, FactoIRC can directly read the log from the journal.

You'll need the following options in your configuration file:

.. code:: ini

    [factoirc]
    method = systemd
    unit = factorio.service


For this method to work, the `python-systemd` module is required and can be installed via pip:

.. code:: bash

    $ pip3 install python-systemd

You can then start FactoIRC:

.. code:: bash

    $ irc3 config.ini

Debugging
---------

`irc3` can be started with the ``-v`` flag to show more log messages (including those generated by FactoIRC).

IRC raw traffic can be shown with ``-r``.

Try ``irc3 -h`` for the full list of options.


.. _irc3: https://irc3.readthedocs.io/
.. _config.example.ini: config.example.ini
.. _factorio-init: https://github.com/Bisa/factorio-init
